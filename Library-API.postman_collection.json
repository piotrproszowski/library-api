{
  "info": {
    "_postman_id": "b23c1c5d-8f16-4a2c-a7e2-ac5dfe6e7f74",
    "name": "Library API",
    "description": "Collection for testing the Library API endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Auth",
      "description": "Authentication and authorization endpoints",
      "item": [
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\",\n    \"password\": \"Password123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Register a new user account"
          }
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"john@example.com\",\n    \"password\": \"Password123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            },
            "description": "Authenticate and receive JWT token"
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "refresh"]
            },
            "description": "Refresh JWT token"
          }
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"john@example.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/reset-password",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "reset-password"]
            },
            "description": "Request password reset"
          }
        },
        {
          "name": "Confirm Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"token\": \"your-confirmation-token\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/confirm-email",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "confirm-email"]
            },
            "description": "Confirm user email"
          }
        },
        {
          "name": "Update Settings",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"John Updated\",\n    \"email\": \"john.updated@example.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/update-settings",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "update-settings"]
            },
            "description": "Update user settings"
          }
        },
        {
          "name": "Change Password",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"oldPassword\": \"Password123!\",\n    \"newPassword\": \"NewPassword123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/change-password",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "change-password"]
            },
            "description": "Change user password"
          }
        }
      ]
    },
    {
      "name": "Books",
      "description": "Book management endpoints",
      "item": [
        {
          "name": "Get All Books",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/books",
              "host": ["{{baseUrl}}"],
              "path": ["books"]
            },
            "description": "Get a list of all available books"
          }
        },
        {
          "name": "Get Book by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/books/:id",
              "host": ["{{baseUrl}}"],
              "path": ["books", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "book-uuid",
                  "description": "Book UUID"
                }
              ]
            },
            "description": "Get detailed information about a specific book"
          }
        },
        {
          "name": "Create Book",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"The Great Gatsby\",\n    \"author\": \"F. Scott Fitzgerald\",\n    \"isbn\": \"9780743273565\",\n    \"publishYear\": 1925,\n    \"category\": \"Fiction\",\n    \"description\": \"The story of the mysteriously wealthy Jay Gatsby.\",\n    \"price\": 29.99,\n    \"quantity\": 10\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/books",
              "host": ["{{baseUrl}}"],
              "path": ["books"]
            },
            "description": "Create a new book (Admin/Employee only)"
          }
        },
        {
          "name": "Update Book",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"The Great Gatsby (Updated)\",\n    \"price\": 24.99,\n    \"quantity\": 15\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/books/:id",
              "host": ["{{baseUrl}}"],
              "path": ["books", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "book-uuid",
                  "description": "Book UUID"
                }
              ]
            },
            "description": "Update book information (Admin/Employee only)"
          }
        },
        {
          "name": "Delete Book",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/books/:id",
              "host": ["{{baseUrl}}"],
              "path": ["books", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "book-uuid",
                  "description": "Book UUID"
                }
              ]
            },
            "description": "Delete a book (Admin only)"
          }
        },
        {
          "name": "Perform Book Action",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"userId\": \"user-uuid\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/books/:id/:action",
              "host": ["{{baseUrl}}"],
              "path": ["books", ":id", ":action"],
              "variable": [
                {
                  "key": "id",
                  "value": "book-uuid",
                  "description": "Book UUID"
                },
                {
                  "key": "action",
                  "value": "reserve",
                  "description": "Action: reserve, borrow, return, cancel"
                }
              ]
            },
            "description": "Perform an action on a book (reserve, borrow, return, cancel)"
          }
        }
      ]
    },
    {
      "name": "Users",
      "description": "User management endpoints (Admin only)",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            },
            "description": "Get list of all users (Admin only)"
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/:id",
              "host": ["{{baseUrl}}"],
              "path": ["users", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "user-uuid",
                  "description": "User UUID"
                }
              ]
            },
            "description": "Get detailed information about a specific user (Admin only)"
          }
        },
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Admin User\",\n    \"email\": \"admin@example.com\",\n    \"password\": \"StrongPassword123!\",\n    \"role\": \"admin\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            },
            "description": "Create a new user (Admin only)"
          }
        },
        {
          "name": "Update User",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Name\",\n    \"role\": \"employee\",\n    \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/:id",
              "host": ["{{baseUrl}}"],
              "path": ["users", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "user-uuid",
                  "description": "User UUID"
                }
              ]
            },
            "description": "Update user information (Admin only)"
          }
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/:id",
              "host": ["{{baseUrl}}"],
              "path": ["users", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "user-uuid",
                  "description": "User UUID"
                }
              ]
            },
            "description": "Delete a user (Admin only)"
          }
        }
      ]
    },
    {
      "name": "Rent",
      "description": "Book rental and status management",
      "item": [
        {
          "name": "Change Book Status",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"status\": \"available\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/rent/:id",
              "host": ["{{baseUrl}}"],
              "path": ["rent", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "book-uuid",
                  "description": "Book UUID"
                }
              ]
            },
            "description": "Change the status of a book (Admin/Employee only)"
          }
        },
        {
          "name": "Get User Rentals",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/rent/user/:userId",
              "host": ["{{baseUrl}}"],
              "path": ["rent", "user", ":userId"],
              "variable": [
                {
                  "key": "userId",
                  "value": "user-uuid",
                  "description": "User UUID"
                }
              ]
            },
            "description": "Get all rentals for a specific user"
          }
        },
        {
          "name": "Get Book Rental History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/rent/book/:bookId",
              "host": ["{{baseUrl}}"],
              "path": ["rent", "book", ":bookId"],
              "variable": [
                {
                  "key": "bookId",
                  "value": "book-uuid",
                  "description": "Book UUID"
                }
              ]
            },
            "description": "Get rental history for a specific book"
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-extract and store the token after login",
          "if (pm.info.requestName === \"Login\" && pm.response.code === 200) {",
          "    const responseJson = pm.response.json();",
          "    if (responseJson && responseJson.token) {",
          "        pm.environment.set(\"authToken\", responseJson.token);",
          "        console.log(\"Saved auth token to environment\");",
          "    }",
          "}"
        ]
      }
    }
  ]
}
